import * as mongoose from 'mongoose';
import { Role } from '../constants/user.constant';

/**
 * Represents a user in the application.
 * This interface extends the mongoose.Document interface.
 */
export interface User extends mongoose.Document {
  /**
   * The unique identifier of the user.
   * @remarks This property is optional as it will be automatically generated by MongoDB.
   */
  _id?: mongoose.Schema.Types.ObjectId;

  /** The first name of the user. */
  firstName: string;

  /** The last name of the user. */
  lastName: string;

  /** The email address of the user. */
  email: string;

  /** The password of the user. */
  password: string;

  /**
   * An array of task IDs associated with the user.
   * @remarks These IDs reference tasks assigned to the user.
   */
  tasks: [mongoose.Schema.Types.ObjectId];

  /**
   * An array of list IDs associated with the user.
   * @remarks These IDs reference lists owned by the user.
   */
  lists: [mongoose.Schema.Types.ObjectId];

  /**
   * An array of category IDs associated with the user.
   * @remarks These IDs reference categories assigned to the user's tasks.
   */
  categories: [mongoose.Schema.Types.ObjectId];

  /**
   * An array of label IDs associated with the user.
   * @remarks These IDs reference labels assigned to the user's tasks.
   */
  labels: [mongoose.Schema.Types.ObjectId];

  /**
   * An array of roles assigned to the user.
   * @remarks Each role defines a set of permissions for the user.
   */
  roles: [Role];

  /**
   * The date and time when the user was created.
   * @remarks This property is optional as it will be automatically set by the database.
   */
  createdAt?: Date;

  /**
   * The date and time when the user was last updated.
   * @remarks This property is optional as it will be automatically updated by the database.
   */
  updatedAt?: Date;
}
